---
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import PostPreview from '../components/PostPreview.astro';
import Pagination from '../components/Pagination.astro';
import authorsData from '../data/authors.json';

// page
let title = 'Don’s Blog';
let description = 'An example blog on Astro';
let canonicalURL = Astro.request.canonicalURL;

export async function createCollection() {
  const allPosts = Astro.fetchContent('./post/*.md')
    .sort((a, b) => new Date(b.date) - new Date(a.date))

  return {
    // Set "paginate" to true to enable pagination.
    paginate: true,

    // `route` defines the URL structure for your collection.
    route: '/author/:slug/:page?',

    // `paths` tells Astro which pages to generate in your collection.
    paths() {
      return Object.keys(authorsData)
        .map((slug) => ({ params: { slug } }))
    },

    // `props` returns the data needed on each page.
    props({ params, paginate }) {
      const { slug } = params
      const author = authorsData[slug]
      const posts = allPosts.filter((post) => post.author === slug)

      return {
        author,
        slug,
        posts: paginate(posts, { pageSize: 3 })
      }
    }
  }
}

const { slug, author, posts } = Astro.props
---

<html>
  <head>
    <title>{title}</title>
    <MainHead
      title={title}
      description={description}
      canonicalURL={canonicalURL}
      prev={posts.url.prev}
      next={posts.url.next}
    />

    <style lang="scss">
      .title {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3em;
        letter-spacing: -0.04em;
        margin-top: 2rem;
        margin-bottom: 0;
      }

      .avatar {
        width: 1em;
        height: 1em;
        margin-right: 0.5em;
        border-radius: 50%;
        overflow:hidden;

        &-img {
          display: block;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }

      .count {
        font-size: 1em;
        display: block;
        text-align: center;
      }
    </style>
  </head>

  <body>
    <Nav title={title} />

    <main class="wrapper">
      <h2 class="title">
        <div class="avatar"><img class="avatar-img" src={author.image} alt=""}></div>
        {author.name}
      </h2>
      <small class="count">{posts.start + 1}–{posts.end + 1} of {posts.total}</small>
      {posts.data.map((post) => <PostPreview post={post} author={author} />)}
    </main>

    <footer>
      <Pagination prevUrl={posts.url.prev} nextUrl={posts.url.next} />
    </footer>
  </body>
</html>
