---
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import PostPreview from '../components/PostPreview.astro';
import Pagination from '../components/Pagination.astro';
import authorsData from '../data/authors.json';

// page
let title = 'Don’s Blog';
let description = 'An example blog on Astro';
let canonicalURL = Astro.request.canonicalURL;

export async function createCollection() {
  const allPosts = Astro.fetchContent('./post/*.md')
    .sort((a, b) => new Date(b.date) - new Date(a.date));

  return {
    // Set "paginate" to true to enable pagination.
    paginate: true,
    
    // `route` defines the URL structure for your collection.
    route: '/posts/:page?',

    props({paginate}) {
      return {
        posts: paginate(allPosts, { pageSize: 2 }),
      };
    },

    // Generate RSS feed (only for main /posts/ feed)
    rss: {
      title: 'Don’s Blog',
      description: 'An example blog on Astro',
      customData: `<language>en-us</language>`,
      item: (item) => ({
        title: item.title,
        description: item.description,
        link: item.url,
        pubDate: item.date,
      }),
    }
  };
}

const { posts } = Astro.props;
---

<html>
  <head>
    <title>{title}</title>
    <MainHead
      title={title}
      description={description}
      image={posts.data[0].image}
      canonicalURL={canonicalURL}
      prev={posts.url.prev}
      next={posts.url.next}
    />

    <style lang="scss">
      .title {
        font-size: 3em;
        letter-spacing: -0.04em;
        margin-top: 2rem;
        margin-bottom: 0;
        text-align: center;
      }

      .count {
        font-size: 1em;
        display: block;
        text-align: center;
      }
    </style>
  </head>

  <body>
    <Nav title={title} />

    <main class="wrapper">
      <h2 class="title">All Posts</h2>
      <small class="count">{posts.start + 1}–{posts.end + 1} of {posts.total}</small>
      {posts.data.map((post) => <PostPreview post={post} author={authorsData[post.author]} />)}
    </main>

    <footer>
      <Pagination prevUrl={posts.url.prev} nextUrl={posts.url.next} />
    </footer>
  </body>
</html>
